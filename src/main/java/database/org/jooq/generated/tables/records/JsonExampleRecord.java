/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records;


import org.jooq.Field;
import org.jooq.JSON;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.generated.tables.JsonExample;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JsonExampleRecord extends TableRecordImpl<JsonExampleRecord> implements Record4<Integer, String, String, JSON> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>billa.json_example.id</code>.
     */
    public JsonExampleRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>billa.json_example.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>billa.json_example.name</code>.
     */
    public JsonExampleRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>billa.json_example.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>billa.json_example.email</code>.
     */
    public JsonExampleRecord setEmail(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>billa.json_example.email</code>.
     */
    public String getEmail() {
        return (String) get(2);
    }

    /**
     * Setter for <code>billa.json_example.address</code>.
     */
    public JsonExampleRecord setAddress(JSON value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>billa.json_example.address</code>.
     */
    public JSON getAddress() {
        return (JSON) get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, String, JSON> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, String, String, JSON> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return JsonExample.JSON_EXAMPLE.ID;
    }

    @Override
    public Field<String> field2() {
        return JsonExample.JSON_EXAMPLE.NAME;
    }

    @Override
    public Field<String> field3() {
        return JsonExample.JSON_EXAMPLE.EMAIL;
    }

    @Override
    public Field<JSON> field4() {
        return JsonExample.JSON_EXAMPLE.ADDRESS;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getEmail();
    }

    @Override
    public JSON component4() {
        return getAddress();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getEmail();
    }

    @Override
    public JSON value4() {
        return getAddress();
    }

    @Override
    public JsonExampleRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public JsonExampleRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public JsonExampleRecord value3(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public JsonExampleRecord value4(JSON value) {
        setAddress(value);
        return this;
    }

    @Override
    public JsonExampleRecord values(Integer value1, String value2, String value3, JSON value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JsonExampleRecord
     */
    public JsonExampleRecord() {
        super(JsonExample.JSON_EXAMPLE);
    }

    /**
     * Create a detached, initialised JsonExampleRecord
     */
    public JsonExampleRecord(Integer id, String name, String email, JSON address) {
        super(JsonExample.JSON_EXAMPLE);

        setId(id);
        setName(name);
        setEmail(email);
        setAddress(address);
    }
}
